<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Utilisateur extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Utilisateur_model');
    } 

    /*
     * Listing of utilisateurs
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('utilisateur/index?');
        $config['total_rows'] = $this->Utilisateur_model->get_all_utilisateurs_count();
        $this->pagination->initialize($config);

        $data['utilisateurs'] = $this->Utilisateur_model->get_all_utilisateurs($params);
        
        $data['_view'] = 'utilisateur/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new utilisateur
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','min_length[6]');
		$this->form_validation->set_rules('username','Username','is_unique[username]|required|max_length[75]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'statut' => $this->input->post('statut'),
				'password' => $this->input->post('password'),
				'username' => $this->input->post('username'),
				'role_utilisateur' => $this->input->post('role_utilisateur'),
				'date_creation' => $this->input->post('date_creation'),
            );
            
            $utilisateur_id = $this->Utilisateur_model->add_utilisateur($params);
            redirect('utilisateur/index');
        }
        else
        {            
            $data['_view'] = 'utilisateur/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a utilisateur
     */
    function edit($id_user)
    {   
        // check if the utilisateur exists before trying to edit it
        $data['utilisateur'] = $this->Utilisateur_model->get_utilisateur($id_user);
        
        if(isset($data['utilisateur']['id_user']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('password','Password','min_length[6]');
			$this->form_validation->set_rules('username','Username','is_unique[username]|required|max_length[75]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'statut' => $this->input->post('statut'),
					'password' => $this->input->post('password'),
					'username' => $this->input->post('username'),
					'role_utilisateur' => $this->input->post('role_utilisateur'),
					'date_creation' => $this->input->post('date_creation'),
                );

                $this->Utilisateur_model->update_utilisateur($id_user,$params);            
                redirect('utilisateur/index');
            }
            else
            {
                $data['_view'] = 'utilisateur/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The utilisateur you are trying to edit does not exist.');
    } 

    /*
     * Deleting utilisateur
     */
    function remove($id_user)
    {
        $utilisateur = $this->Utilisateur_model->get_utilisateur($id_user);

        // check if the utilisateur exists before trying to delete it
        if(isset($utilisateur['id_user']))
        {
            $this->Utilisateur_model->delete_utilisateur($id_user);
            redirect('utilisateur/index');
        }
        else
            show_error('The utilisateur you are trying to delete does not exist.');
    }
    
}
