<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Article_controleur extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Article_model');
    } 

    /*
     * Listing of tb_articles
     */
    function index()
    {
        $data['tb_articles'] = $this->Article_model->get_all_tb_articles();
        
        $data['_view'] = 'articles/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tb_article
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('article_titre','Article Titre','required|min_length[5]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'article_statut' => $this->input->post('article_statut'),
				'categorie_id' => $this->input->post('categorie_id'),
				'redacteur_id' => $this->input->post('redacteur_id'),
				'article_titre' => $this->input->post('article_titre'),
				'article_slug' => $this->input->post('article_slug'),
				'article_image' => $this->input->post('article_image'),
				'article_date' => $this->input->post('article_date'),
				'article_contenu' => $this->input->post('article_contenu'),
            );
            
            $tb_article_id = $this->Article_model->add_tb_article($params);
            redirect('article_controleur/index');
        }
        else
        {
			$this->load->model('Tb_category_model');
			$data['all_tb_categories'] = $this->Tb_category_model->get_all_tb_categories();

			$this->load->model('Redacteur_model');
			$data['all_tb_redacteurs'] = $this->Redacteur_model->get_all_tb_redacteurs();
            
            $data['_view'] = 'articles/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tb_article
     */
    function edit($article_id)
    {   
        // check if the tb_article exists before trying to edit it
        $data['tb_article'] = $this->Article_model->get_tb_article($article_id);
        
        if(isset($data['tb_article']['article_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('article_titre','Article Titre','required|min_length[5]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'article_statut' => $this->input->post('article_statut'),
					'categorie_id' => $this->input->post('categorie_id'),
					'redacteur_id' => $this->input->post('redacteur_id'),
					'article_titre' => $this->input->post('article_titre'),
					'article_slug' => $this->input->post('article_slug'),
					'article_image' => $this->input->post('article_image'),
					'article_date' => $this->input->post('article_date'),
					'article_contenu' => $this->input->post('article_contenu'),
                );

                $this->Article_model->update_tb_article($article_id,$params);            
                redirect('article_controleur/index');
            }
            else
            {
				$this->load->model('Tb_category_model');
				$data['all_tb_categories'] = $this->Tb_category_model->get_all_tb_categories();

				$this->load->model('Redacteur_model');
				$data['all_tb_redacteurs'] = $this->Redacteur_model->get_all_tb_redacteurs();

                $data['_view'] = 'articles/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tb_article you are trying to edit does not exist.');
    } 

    /*
     * Deleting tb_article
     */
    function remove($article_id)
    {
        $tb_article = $this->Article_model->get_tb_article($article_id);

        // check if the tb_article exists before trying to delete it
        if(isset($tb_article['article_id']))
        {
            $this->Article_model->delete_tb_article($article_id);
            redirect('article_controleur/index');
        }
        else
            show_error('The tb_article you are trying to delete does not exist.');
    }
    
}
